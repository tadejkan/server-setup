# redirect www to non-www
#server {
#   server_name www.SITE;
#   rewrite ^(.*) http://SITE$1 permanent;
#}

# redirect http to https
#server {
#    listen 80;
#    server_name SITE www.SITE;
#    rewrite ^(.*) https://SITE$1 permanent;
#}

server {
    listen 80;
#    listen 443 ssl http2;
    server_name SITE www.SITE;
    root /var/www/SITE/public;
    index index.php;
    
#    ssl_certificate /etc/letsencrypt/live/SITE/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/SITE/privkey.pem;
#    
#    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#    ssl_prefer_server_ciphers on;
#    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
#    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
#    ssl_session_timeout 1d;
#    ssl_session_cache shared:SSL:50m;
#    ssl_stapling on;
#    ssl_stapling_verify on;
#    
#    # uncomment, if you only want to run the site thru HTTPS
#    #add_header Strict-Transport-Security max-age=15768000;

    # logging
    access_log /var/log/nginx/SITE.access.log;
    error_log /var/log/nginx/SITE.error.log notice;
    
    # allow access to .well-known (primarily for Let's encrypt)
    location ~ /.well-known {
        allow all;
    }
    
    # ignore dot files
    location ~ (^|/)\. {
        return 403;
    }
    
    # don't execute php files in public dirs
    location ^~ /(uploads) {
        location ~* \.php$ { return 403; }
    }
    
    # redirect cached URLs (assets)
    rewrite ^/cached/[0-9]+/(.*)$ /$1 last;
    
    # redirect check token
    rewrite ^/check-token$ /check-token.php last;
    
    # serve static files directly
    location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|txt)$ {
        access_log off;
        expires    max;
        
        try_files $uri $uri/ /index.php$is_args$args;
    }
    
    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        fastcgi_buffers 16 16k; 
        fastcgi_buffer_size 32k;
        
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        fastcgi_param HTTP_PROXY "";
        
        fastcgi_pass unix:/var/run/php-fpm/SITE.socket;
        #for PHP 5.3, do this instead: fastcgi_pass unix:/var/run/php-53-fpm/SITE.socket;
        #for PHP 5.2, do this instead: fastcgi_pass unix:/var/run/php-52-fpm/SITE.socket;
        
        fastcgi_index index.php;
        include /etc/nginx/fastcgi_params;
    }
}
